# ci.yml
name: Build

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: ubuntu-latest
            triplet: x64-linux
          - os: ubuntu-latest
            triplet: x86-linux
          - os: windows-latest
            triplet: x64-windows
          - os: windows-latest
            triplet: x86-windows
          - os: macos-latest
            triplet: x64-osx
    env:
      VCPKG_DEFAULT_TRIPLET: ${{ matrix.triplet }}
      VCPKG_DEFAULT_HOST_TRIPLET: ${{ matrix.triplet }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Setup CMake
        uses: lukka/get-cmake@latest

      - name: Install dependencies (Non-Windows)
        if: runner.os != 'Windows'
        run: |
          if [[ "$RUNNER_OS" == "Linux" ]]; then
            sudo apt-get update
            sudo apt-get install -y \
              build-essential cmake git \
              libx11-dev libxext-dev libxrandr-dev libxcursor-dev libxinerama-dev libxi-dev \
              libgl1-mesa-dev libwayland-dev libwayland-client0 libwayland-cursor0 libwayland-egl1-mesa \
              libasound2-dev libpulse-dev libudev-dev libdbus-1-dev libdrm-dev libgbm-dev \
              libjack-jackd2-dev libpipewire-0.3-dev libsndio-dev libusb-1.0-0-dev
            git clone --recurse-submodules https://github.com/libsdl-org/SDL.git
            cd SDL && mkdir build && cd build
            cmake .. -DCMAKE_BUILD_TYPE=Release
            sudo cmake --install .
            cd ../..
          elif [[ "$RUNNER_OS" == "macOS" ]]; then
            brew update
            brew install cmake sdl3
          fi

      - name: Setup vcpkg (Windows only)
        if: runner.os == 'Windows'
        uses: lukka/run-vcpkg@v11
        with:
          vcpkgJsonGlob: 'vcpkg.json'

      - name: Configure and build Debug
        run: |
          cmake -S . -B build/debug -DCMAKE_BUILD_TYPE=Debug \
            ${{ runner.os == 'Windows' && format('-DCMAKE_TOOLCHAIN_FILE={0}/vcpkg/scripts/buildsystems/vcpkg.cmake', github.workspace) || '' }}
          cmake --build build/debug --config Debug

      - name: Configure and build Release
        run: |
          cmake -S . -B build/release -DCMAKE_BUILD_TYPE=Release \
            ${{ runner.os == 'Windows' && format('-DCMAKE_TOOLCHAIN_FILE={0}/vcpkg/scripts/buildsystems/vcpkg.cmake', github.workspace) || '' }}
          cmake --build build/release --config Release
